Name     YATAC ;
PartNo   00 ;
Date     4/29/2019 ;
Revision 03 ;
Designer A J Hewitt ;
Company  ;
Assembly None ;
Location None ;
Device   g16v8a ;

/****************************** INPUT PINS ******************************/
PIN 1      = sclk          ; /*                                         */
PIN [2..4] = [I0..2]       ; /*                                         */
PIN 5      = I3or4         ; /* Combination of (I3 # I4)                */
PIN [6..8] = [I5..7]       ; /*                                         */
PIN 9      = A7            ; /*                                         */
PIN 12     = !reset        ; /*                                         */
PIN 19     = pclk          ; /*                                         */

/****************************** OUTPUT PINS *****************************/
PIN 13    = pcent          ; /* PC Count Enable (ent)                   */
PIN 14    = !inst          ; /* CPU execution state (0=Load I)          */
PIN 15    = hsel           ; /* H Register Select (0=L 1=H)             */
PIN 16    = boot           ; /* Boot mode (0=run, 1=booting)            */
PIN 17    = !bank          ; /* ROM memory bank (0=lower, 1=upper)      */
PIN 18    = a16            ; /* CPU ROM A16                             */

fn4 = I7;
fnh = !I7 & !I6;
fn8 = !I7 & !I6 & I5;
oper = !I7 & !I6 & !I5;

cond = I0 $ A7;
skip = (!I2 & !I1 & !I0) # (I1 & cond);
r2c = oper & !I3or4;
nop = r2c & skip;
toggle = !inst & r2c & I2 & I0;

prog = oper # inst;
pcent = (pclk & prog) # (nop & (I1 # I0));
a16 = (prog & !bank) # (!prog & (!hsel # !fnh));

FIELD execution = [inst, hsel];
$DEFINE prog_I    'b'10
$DEFINE alu_H     'b'01
$DEFINE alu_L     'b'00

SEQUENCE execution {
  PRESENT prog_I
    IF reset NEXT prog_I;
    IF nop NEXT prog_I;
    IF fn4 NEXT alu_L;
    DEFAULT NEXT alu_H;
  PRESENT alu_H
    IF fn8 NEXT alu_L;
    DEFAULT NEXT prog_I;
  PRESENT alu_L
    NEXT prog_I;
}

$DEFINE upper     'b'0
$DEFINE lower     'b'1

SEQUENCE bank {
  PRESENT upper
    IF reset NEXT upper;
    IF toggle NEXT lower;
    DEFAULT NEXT upper;
  PRESENT lower
    IF reset NEXT upper;
    IF toggle NEXT upper;
    DEFAULT NEXT lower;
}

$DEFINE init      'b'1
$DEFINE run       'b'0

Sequence boot {
  present init
    IF reset NEXT init;
    IF toggle NEXT run;
    DEFAULT NEXT init;
  present run
    IF reset NEXT init;
    DEFAULT NEXT run;
}