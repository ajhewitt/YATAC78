# Load immediate to register (with fetch)
INCLUDE ../inc/unary.nsa
INCLUDE ../inc/zpage.nsa
INCLUDE ../inc/pages.nsa
PAGE LXI_PG

# assume: Y = $VMS
LD HL, $INC2$NULL
FNH DZ, HLD           # inc state
LD HL, $INC$FORK3
LD Y, $PCL
FNFH DZ, XD           # X,PCL = PCL+1
FNEL A, PC
#14/11

ADDR 0x20             # PCL = 254, iden PCH, iden PCH, inc PCH
LD HL, $IDEN$SRC2RPL
LDZ Y, $PCH
FNH DZ, Y             # Y = PCH
#20/5
FNFH M, NA            # A = [PC]
LD Y, $INST
FNEL DZ, Y            # Y = zpage addr of low reg
FNH AZ, HLD           # A -> low reg
#30/12
LD HL, $INC$NULL
LD Y, $PCL
FNFH DZ, XD           # X,PCL = PCL+1
LD HL, $IDEN$SRC2RPH
#39/20
LDZ Y, $PCH
FNH DZ, Y             # Y = PCH
FNFH M, NA            # A = [PC]
LD Y, $INST
FNEL DZ, Y            # Y = zpage addr of hi reg
#51/29
FNH AZ, HLD           # A -> hi reg
NOP
NOP
NOP
NOP
NOP
LD HL, $INC$NULL
#60/37
LD Y, $PCL
FNFH DZ, XD           # X,PCL = PCL+1
LDZ Y, $PCH
FNH DZ, HLD           # PCH = PCH+1      *** inc PCH ***
LD HL, $IDEN$NULL
#71/46
FNH A, Y              # Y = PCH
FNFH M, NA            # A = [PC]
LD Y, $INST
FNH A, HLD            # cache instruction (from HL)
#80/52
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#86/56

ADDR 0x58             # PCL = 254, iden PCH, inc PCH, iden PCH
LD HL, $IDEN$SRC2RPL
LDZ Y, $PCH
FNH DZ, Y             # Y = PCH
#20/5
FNFH M, NA            # A = [PC]
LD Y, $INST
FNEL DZ, Y            # Y = zpage addr of low reg
FNH AZ, HLD           # A -> low reg
#30/12
LD HL, $INC$NULL
LD Y, $PCL
FNFH DZ, XD           # X,PCL = PCL+1
LDZ Y, $PCH
FNH DZ, HLD           # PCH = PCH+1      *** inc PCH ***
#41/21
LD HL, $IDEN$SRC2RPH
FNH A, Y              # Y = PCH
FNFH M, NA            # A = [PC]
LD Y, $INST
#50/28
FNEL DZ, Y            # Y = zpage addr of hi reg
FNH AZ, HLD           # A -> hi reg
NOP
NOP
NOP
NOP
NOP
#60/36
LD HL, $INC$NULL
LD Y, $PCL
FNFH DZ, XD           # X,PCL = PCL+1
LD HL, $IDEN$NULL
LDZ Y, $PCH
#71/46
FNH DZ, Y             # Y = PCH
FNFH M, NA            # A = [PC]
LD Y, $INST
FNH A, HLD            # cache instruction (from HL)
#80/52
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#86/56

ADDR 0x90             # PCL = 0, inc PCH, iden PCH, iden PCH
LDZ Y, $PCH
FNH DZ, HLD           # PCH = PCH+1      *** inc PCH ***
LD HL, $IDEN$SRC2RPL
#20/5
FNH A, Y              # Y = PCH
FNFH M, NA            # A = [PC]
LD Y, $INST
FNEL DZ, Y            # Y = zpage addr of low reg
#30/12
FNH AZ, HLD           # A -> low reg
LD HL, $INC$NULL
LD Y, $PCL
FNFH DZ, XD           # X,PCL = PCL+1
#39/19
LD HL, $IDEN$SRC2RPH
LDZ Y, $PCH
FNH DZ, Y             # Y = PCH
FNFH M, NA            # A = [PC]
LD Y, $INST
#50/28
FNEL DZ, Y            # Y = zpage addr of hi reg
FNH AZ, HLD           # A -> hi reg
NOP
NOP
NOP
NOP
NOP
#60/36
LD HL, $INC$NULL
LD Y, $PCL
FNFH DZ, XD           # X,PCL = PCL+1
LD HL, $IDEN$NULL
LDZ Y, $PCH
#71/46
FNH DZ, Y             # Y = PCH
FNFH M, NA            # A = [PC]
LD Y, $INST
FNH A, HLD            # cache instruction (from HL)
#80/52
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#86/56

ADDR 0xC8             # else, iden PCH, iden PCH, iden PCH
LD HL, $IDEN$SRC2RPL
LDZ Y, $PCH
FNH A, Y              # Y = PCH
#20/5
FNFH M, NA            # A = [PC]
LD Y, $INST
FNEL DZ, Y            # Y = zpage addr of low reg
FNH AZ, HLD           # A -> low reg
#30/12
LD HL, $INC$NULL
LD Y, $PCL
FNFH DZ, XD           # X,PCL = PCL+1
LD HL, $IDEN$SRC2RPH
LDZ Y, $PCH
#41/22
FNH DZ, Y             # Y = PCH
FNFH M, NA            # A = [PC]
LD Y, $INST
FNEL DZ, Y            # Y = zpage addr of hi reg
#51/29
FNH AZ, HLD           # A -> hi reg
FNH A, HL             # 2-cycle NOP
NOP
NOP
NOP
NOP
NOP
#60/36
LD HL, $INC$NULL
LD Y, $PCL
FNFH DZ, XD           # X,PCL = PCL+1
LD HL, $IDEN$IDEN
LDZ Y, $PCH
#71/46
FNH DZ, Y             # Y = PCH
FNFH M, NA            # A = [PC]
LD Y, $INST
FNH A, HLD            # cache instruction (from HL)
#80/52
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#86/56
