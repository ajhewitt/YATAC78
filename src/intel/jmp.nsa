# Unconditional jump (with fetch)
INCLUDE ../inc/unary.nsa
INCLUDE ../inc/zpage.nsa
INCLUDE ../inc/pages.nsa
PAGE JMP_PG

# assume: Y = $VMS
LDZ HL, $INC2$NULL
FNH DZ, HLD           # inc state
LD HL, $INC$FORK2
LD Y, $PCL
FNFH DZ, XD           # X,PCL = PCL+1
FNEL A, PC
#14/11

ADDR 0x40             # PCL = 255, iden PCH, inc PCH
LD HL, $IDEN$NULL
LDZ Y, $PCH
FNH DZ, Y             # Y = PCH
#20/5
FNFH M, NA            # A = [PC]
LD Y, $TEMP
FNH AZ, HLD           # A -> temp
LD HL, $INC$NULL
#29/12
LD Y, $PCL
FNFH DZ, XD           # X,PCL = PCL+1
LDZ Y, $PCH
FNH DZ, HLD           # PCH = PCH+1      *** inc PCH ***
LD HL, $IDEN$NULL
#40/21
FNH A, Y              # Y = PCH
FNFH M, NA            # A = [PC]
LD Y, $PCH
FNFH AZ, ND           # A -> PCH
#50/28
LDZ Y, $TEMP
FNFH DZ, XA           # X,A = temp
LDZ Y, $PCL
FNFH AZ, ND           # A -> PCL
#60/36
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
LD Y, $PCH
#70/46
FNFL DZ, Y            # Y = PCH
FNFH M, NA            # A = [PC]
LD Y, $INST
FNH AZ, HLD           # cache instruction (from HL)
#80/53
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#86/57

ADDR 0x80             # PCL = 0, inc PCH, iden PCH
LDZ Y, $PCH
FNH DZ, HLD           # PCH = PCH+1      *** inc PCH ***
LD HL, $IDEN$NULL
#20/5
FNH A, Y              # Y = PCH
FNFH M, NA            # A = [PC]
LD Y, $TEMP
FNH AZ, HLD           # A -> temp
#29/11
LD HL, $INC$NULL
LD Y, $PCL
FNFH DZ, XD           # X,PCL = PCL+1
LD HL, $IDEN$IDEN
LDZ Y, $PCH
#40/21
FNH DZ, Y             # Y = PCH
FNFH M, NA            # A = [PC]
LD Y, $PCH
FNFH AZ, ND           # A -> PCH
#50/28
LDZ Y, $TEMP
FNFH DZ, XA           # X,A = temp
LDZ Y, $PCL
FNFH AZ, ND           # A -> PCL
#60/36
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
LD Y, $PCH
#70/46
FNFL DZ, Y            # Y = PCH
FNFH M, NA            # A = [PC]
LD Y, $INST
FNH AZ, HLD           # cache instruction (from HL)
#80/53
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#86/57

ADDR 0xC0             # else, iden PCH, iden PCH
LD HL, $IDEN$NULL
LDZ Y, $PCH
FNH DZ, Y             # Y = PCH
#20/5
FNFH M, NA            # A = [PC]
LD Y, $TEMP
FNH AZ, HLD           # A -> temp
LD HL, $INC$NULL
#29/12
LD Y, $PCL
FNFH DZ, XD           # X,PCL = PCL+1
LD HL, $IDEN$IDEN
LDZ Y, $PCH
FNH DZ, Y             # Y = PCH
#40/21
FNFH M, NA            # A = [PC]
LD Y, $PCH
FNFH AZ, ND           # A -> PCH
LDZ Y, $TEMP
#50/29
FNFH DZ, XA           # X,A = temp
LDZ Y, $PCL
FNFH AZ, ND           # A -> PCL
NOP
NOP
#60/37
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
LD Y, $PCH
#70/47
FNFL DZ, Y            # Y = PCH
FNFH M, NA            # A = [PC]
LD Y, $INST
FNH AZ, HLD           # cache instruction (from HL)
#80/54
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#86/58
