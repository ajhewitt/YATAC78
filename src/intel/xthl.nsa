# Exchange stack top with HL
INCLUDE ../inc/unary.nsa
INCLUDE ../inc/zpage.nsa
INCLUDE ../inc/pages.nsa
PAGE XTHL_PG

# assume: Y = $VMS, ref: https://en.wikipedia.org/wiki/XOR_swap_algorithm
LDZ HL, $INC2$NULL
FNH DZ, HLD           # inc state
# [SP] <-> L
LD HL, $IDEN$IDEN
LD Y, $SPL
FNFL DZ, X            # X = SPL
#11
LDZ Y, $SPH
FNH DZ, Y             # Y = SPH
FNFL M, HL            # HL = [SP]
LD Y, $LREG
#20
XORHL DZ, NA          # A = [SP]$L
LDZ Y, $SPH
FNH DZ, Y             # Y = SPH
XORHL A, NM           # [SP]$A -> [SP]
#32
LD Y, $LREG
MVHL AZ, ND           # [SP] -> L
# [SP+1] <-> H
LD HL, $INC$FORK1
#40
LD Y, $SPL
FNFH DZ, XA           # X = SPL+1
FNDL A, PC
#48

ADDR 0x80             # inc SPH
LD HL, $IDEN$INC
#50
FNFL DZ, Y            # Y = SPH+1
FNFH M, HLA           # HL = [SP+1]
LD Y, $HREG
XORHL DZ, NA          # A = [SP+1]$H
#62
LDZ Y, $SPH
FNFL DZ, Y            # Y = SPH+1
XORHL A, NM           # [SP+1]$A -> [SP+1]
#71
LD Y, $HREG
MVHL AZ, ND           # [SP+1] -> H
LD HL, $FETCH
NOP
#80
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#86

ADDR 0xC0
LD HL, $IDEN$IDEN
#50
FNFL DZ, Y            # Y = SPH
FNFH M, HLA           # HL = [SP+1]
LD Y, $HREG
XORHL DZ, NA          # A = [SP+1]$H
#62
LDZ Y, $SPH
FNFL DZ, Y            # Y = SPH+1?
XORHL A, NM           # [SP+1]$A -> [SP+1]
#71
LD Y, $HREG
MVHL AZ, ND           # [SP+1] -> H
LD HL, $FETCH
NOP
#80
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#86
