# Interupt - fetch or disable interupts, load temp, restart
INCLUDE ../inc/unary.nsa
INCLUDE ../inc/zpage.nsa
INCLUDE ../inc/pages.nsa
PAGE INTR2_PG

# assume: Y = $VMS
LDZ HL, $INC$NULL
FNH DZ, HLD           # inc state
LD HL, $IDEN$NULL
LDZ Y, $IMASK
FNH DZ, HL            # HL = interupt mask
#10/8
ANDH E, NA            # A = masked interupts
LD HL, $7$FORKI
FNDL A, PC            # fork on state
#18/14

ADDR 0x18             # no interupt, return to intr2 instruction
NOP
NOP
#20/2
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
#30/12
NOP
NOP
NOP
NOP
NOP
LD HL, $INTR2         # HL = INTR2 instruction
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#43/23

ADDR 0x30             # non-vectored interupt
LDZ Y, $IMASK
#20/2
ANDH DZ, ND           # reset bit3 of $IMASK
LD HL, $IDEN$NULL
LD Y, $TEMP
FNFH IZ, ND            # I0 -> temp
#30/10
NOP
LD HL, $RESTART_INST   # HL = check interupts
MVHL AZ, ND            # HL -> inst cache
LD Y, $VMS             # set Y = $VMS on exit
VMPHL DZ, PGA          # jump to next VMC
#43/19

ADDR 0x48             # vectored interupt 1.5
LDZ Y, $IMASK
#20/2
ANDH DZ, ND           # reset bit3 of $IMASK
LD HL, $0x0C
LD Y, $TEMP
MVHL AZ, ND           # 1.5 -> temp
#31/10
LD HL, $RESTART_INST  # HL = check interupts
MVHL AZ, ND           # HL -> inst cache
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#43/18

ADDR 0x60             # vectored interupt 2.5
LDZ Y, $IMASK
#20/2
ANDH DZ, ND           # reset bit3 of $IMASK
LD HL, $0x14
LD Y, $TEMP
MVHL AZ, ND           # 2.5 -> temp
#31/10
LD HL, $RESTART_INST  # HL = check interupts
MVHL AZ, ND           # HL -> inst cache
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#43/18

ADDR 0x78             # vectored interupt 3.5
LDZ Y, $IMASK
#20/2
ANDH DZ, ND           # reset bit3 of $IMASK
LD HL, $0x1C
LD Y, $TEMP
MVHL AZ, ND           # 3.5 -> temp
#31/10
LD HL, $RESTART_INST  # HL = check interupts
MVHL AZ, ND           # HL -> inst cache
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#43/18

ADDR 0x90             # vectored interupt 4.5
LDZ Y, $IMASK
#20/2
ANDH DZ, ND           # reset bit3 of $IMASK
LD HL, $0x24
LD Y, $TEMP
MVHL AZ, ND           # 4.5 -> temp
#31/10
LD HL, $RESTART_INST  # HL = check interupts
MVHL AZ, ND           # HL -> inst cache
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#43/18

ADDR 0xA8             # vectored interupt 5.5
LDZ Y, $IMASK
#20/2
ANDH DZ, ND           # reset bit3 of $IMASK
LD HL, $0x2C
LD Y, $TEMP           
MVHL AZ, ND           # 5.5 -> temp
#31/10
LD HL, $RESTART_INST  # HL = check interupts
MVHL AZ, ND           # HL -> inst cache
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#43/18

ADDR 0xC0             # vectored interupt 6.5
LDZ Y, $IMASK
#20
ANDH DZ, ND           # reset bit3 of $IMASK
LD HL, $0x34
LD Y, $TEMP     
MVHL AZ, ND           # 6.5 -> temp
#31
LD HL, $RESTART_INST  # HL = check interupts
MVHL AZ, ND           # HL -> inst cache
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#43

ADDR 0xD8             # vectored interupt 7.5
LDZ Y, $IMASK
#20
ANDH DZ, ND           # reset bit3 of $IMASK
LD HL, $0x3C
LD Y, $TEMP     
MVHL AZ, ND           # 7.5 -> temp
#31
LD HL, $RESTART_INST  # HL = check interupts
MVHL AZ, ND           # HL -> inst cache
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#43
