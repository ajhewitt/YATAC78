# In/Output port jump page
INCLUDE ../inc/unary.nsa
INCLUDE ../inc/zpage.nsa
INCLUDE ../inc/pages.nsa
PAGE INOUT_PG

FNFL A, PC            #70 PC = A
#73/2(0*9+2)
FNFH IZ, ND           # I0 (intr) -> acc
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
DISHL DZ, PGA         # jump to next VMC
#86/11(1*9+2)
FNFH IZ, O1D          # I1 -> acc
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
DISHL DZ, PGA         # jump to next VMC
#86/20(2*9+2)
FNFH IZ, O2D          # I2 -> acc
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
DISHL DZ, PGA         # jump to next VMC
#86/29(3*9+2)
FNFH IZ, O3D          # I3 -> acc
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
DISHL DZ, PGA         # jump to next VMC
#86/38(4*9+2)
FNFH IZ, O4D          # I4 -> acc
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
DISHL DZ, PGA         # jump to next VMC
#86/47(5*9+2)
FNFH IZ, O5D          # I5 -> acc
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
DISHL DZ, PGA         # jump to next VMC
#86/56(6*9+2)
FNFH IZ, O6D          # I6 -> acc
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
DISHL DZ, PGA         # jump to next VMC
#86/65(7*9+2)
FNFH IZ, O7D          # I7 -> acc
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
DISHL DZ, PGA         # jump to next VMC
#86/74(0*9+74)
FNFH DZ, NA           # acc -> O0 (null)
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
DISHL DZ, PGA         # jump to next VMC
#86/83(1*9+74)
FNFH DZ, O1A          # acc -> O1
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
DISHL DZ, PGA         # jump to next VMC
#86/92(2*9+74)
FNFH DZ, O2A          # acc -> O2
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
DISHL DZ, PGA         # jump to next VMC
#86/101(3*9+74)
FNFH DZ, O3A          # acc -> O3
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
DISHL DZ, PGA         # jump to next VMC
#86/110(4*9+74)
FNFH DZ, O4A          # acc -> O4
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
DISHL DZ, PGA         # jump to next VMC
#86/119(5*9+74)
FNFH DZ, O5A          # acc -> O5
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
DISHL DZ, PGA         # jump to next VMC
#86/128(6*9+74)
FNFH DZ, O6A          # acc -> O6
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
DISHL DZ, PGA         # jump to next VMC
#86/137(7*9+74)
FNFH DZ, O7A          # acc -> O7
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
DISHL DZ, PGA         # jump to next VMC
#86/146
