# In/Output port jump page
INCLUDE ../inc/unary.nsa
INCLUDE ../inc/zpage.nsa
INCLUDE ../inc/pages.nsa
PAGE INOUT_PG

MVHL PCA              # PC = HL
#69/2(0*13+2)
LD HL, $IDEN$NULL
LD Y, $AREG
FNFH IZ, ND           # I0 -> acc
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#86/15(1*13+2)
LD HL, $IDEN$NULL
LD Y, $AREG
FNFH IZ, O1D          # I1 -> acc
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#86/28(2*13+2)
LD HL, $IDEN$NULL
LD Y, $AREG
FNFH IZ, O2D          # I2 -> acc
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#86/41(3*13+2)
LD HL, $IDEN$NULL
LD Y, $AREG
FNFH IZ, O3D          # I3 -> acc
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#86/54(4*13+2)
LD HL, $IDEN$NULL
LD Y, $AREG
FNFH IZ, O4D          # I4 -> acc
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#86/67(5*13+2)
LD HL, $IDEN$NULL
LD Y, $AREG
FNFH IZ, O5D          # I5 -> acc
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#86/80(6*13+2)
LD HL, $IDEN$NULL
LD Y, $AREG
FNFH IZ, O6D          # I6 -> acc
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#86/93(7*13+2)
LD HL, $IDEN$NULL
LD Y, $AREG
FNFH IZ, O7D          # I7 -> acc
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#86/106(0*13+106)
LD HL, $IDEN$NULL
LD Y, $AREG
FNFH DZ, NA           # acc -> O0
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#86/119(1*13+106)
LD HL, $IDEN$NULL
LD Y, $AREG
FNFH DZ, O1A          # acc -> O1
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#86/132(2*13+106)
LD HL, $IDEN$NULL
LD Y, $AREG
FNFH DZ, O2A          # acc -> O2
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#86/145(3*13+106)
LD HL, $IDEN$NULL
LD Y, $AREG
FNFH DZ, O3A          # acc -> O3
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#86/158(4*13+106)
LD HL, $IDEN$NULL
LD Y, $AREG
FNFH DZ, O4A          # acc -> O4
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#86/171(5*13+106)
LD HL, $IDEN$NULL
LD Y, $AREG
FNFH DZ, O5A          # acc -> O5
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#86/184(6*13+106)
LD HL, $IDEN$NULL
LD Y, $AREG
FNFH DZ, O6A          # acc -> O6
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#86/197(7*13+106)
LD HL, $IDEN$NULL
LD Y, $AREG
FNFH DZ, O7A          # acc -> O7
LD Y, $INST
FNH DZ, HL            # HL = inst cache
#80
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#86/210
