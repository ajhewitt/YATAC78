# fetch
INCLUDE ../inc/unary.nsa
INCLUDE ../inc/zpage.nsa
INCLUDE ../inc/pages.nsa
PAGE FETCH_PG

# assume: Y = $VMS
LDZ HL, $INC$NULL
FNH DZ, HLD        # inc state
LDZ HL, $SWAP$NULL
FNH DZ, HLA        # swap post_inc bit to sign
LDN PC, $0x38
NOP
#10/9
LD HL, $INC$FORK1
LD Y, $PCL
FNFH DZ, XD        # X,PCL = PCL+1
FNEL A, PC         # fork on PCL
#20/17

ADDR 0x38
#10
LD HL, $7$IDEN
ANDH DZ, ND        # clear post_inc bit
LD Y, $PCL
FNFL DZ, X         # X = PCL
#20/8
#ADDR 0x40         # PCL = 255
NOP
NOP
LD HL, $IDEN$IDEN
LDZ Y, $PCH
FNH DZ, Y          # Y = PCH
FNFL B, HL         # HL = [PC]
#31
LD Y, $INST
MVHLZ ND           # cache instruction (from HL)
LD Y, $VMS         # set Y = $VMS on exit
VMPHL DZ, PGA      # jump to next VMC
#43

ADDR 0xA0          # PCL = 0
LDZ Y, $PCH
FNH DZ, HLD        # PCH = PCH+1
LD HL, $IDEN$IDEN
FNH A, Y           # Y = PCH
FNFL B, HL         # HL = [PC]
#31
LD Y, $INST
MVHLZ ND           # cache instruction (from HL)
LD Y, $VMS         # set Y = $VMS on exit
VMPHL DZ, PGA      # jump to next VMC
#43
