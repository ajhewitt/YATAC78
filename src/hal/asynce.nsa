# H-sync with audio on execute
INCLUDE ../inc/unary.nsa
INCLUDE ../inc/zpage.nsa
INCLUDE ../inc/pages.nsa
PAGE ASYNCE_PG

# PMODE: column in AV used during process cycle
# VLINE: line(page) in video ram
# VMS: [mode_line][e][cycle count]
#           0,1,2  0  0,1,2,3,4,5
#         3,4,5,6  1  0,1,2,3,4
#        7,8,9,10     0,1,2,3,4
#  11,12,13,14,15     0,1,2,3
# assume Y = $VMS
LDZ HL, $INCLINE$NULL
FNH DZ, HLD           # H=mode_line+1, L=E000
LD Y, $PMODE
VIDH DZ, SA           # mode_line, pmode —> S
#9/7
LDP HL, $IDEN$IDEN    # sign bit low, don’t inc vline
LDN HL, $INC$IDEN     # sign bit high, inc vline
LD Y, $VLINE
FNFH DZ, VD           # increment? vline —> V
FNFL E, HL            # serial inputs -> H
#20/17
LD Y, $COMLS
COMH DZ, ND           # update comms line state
LD HL, $IDEN$NULL
LD Y, $AMODE
#29/25
FNFH DZ, NA           # A = audio mode
LDP PC, $0x28         # audio off if -1
LDZ Y, $INST
FNH DZ, HL            # inst cache -> HL
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#43/37

ADDR 0x28             # first voice
LDZ Y, $NOTE1L        # 69
FNH DZ, HL            # HL = 0xA6
LD Y, $TONE1L
#40/45
ADDHL DZ, ND
AFHL AZ, NA
LDP HL, $IDEN$NULL
LDN HL, $INC$NULL
#51/53
LDZ Y, $TONE1H
FNH DZ, HLD           # inc toneH if carry
LD HL, $IDEN$NULL
LDZ Y, $NOTE1H        # 69
FNH DZ, HL            # HL = 0x0B
#61/61
LD Y, $TONE1H
ADDHL DZ, ND          # A = sample index
LD HL, $IDEN$NULL
LDZ Y, $WAVE1
#71/69
FNH DZ, HL            # HL = adsr/wave
LD Y, $AUDIO
WAVHL A, ND           # synth value -> audio
LD HL, $IDEN$NULL
#81/77
LDZ Y, $NOISE
FNH DZ, HL            # HL = adsr/noise
LD Y, $PLINE
WAVHL DZ, HLA         # HL = noise value
#91/84
LD Y, $AUDIO
ADDHL DZ, ND          # HL +> audio
LD HL, $3$FORKH
LD Y, $AMODE
#101/92
FNEL DZ, PC           # fork on audio mode {1:0x60, 2:0x70, 3:0xA8}

ADDR 0x60             # 1-voice
LD HL, $INC2$NULL
LDZ Y, $VMS
FNH DZ, HLD           # VMS = VMS+2
#110/101
NOP
NOP
NOP
NOP
NOP
LD PC, $NEXT
#117/108

ADDR 0x70             # 2-voice
LD Y, $VMS
ADDH DZ, ND           # VMS = VMS+3
#109/115
LD HL, $IDEN$NULL
LDZ Y, $NOTE2L        # 69
FNH DZ, HL            # HL = 0xA6
LD Y, $TONE2L
ADDHL DZ, ND
#121/124
AFHL AZ, NA
LDP HL, $IDEN$NULL
LDN HL, $INC$NULL
LDZ Y, $TONE2H
#130/132
FNH DZ, HLD           # inc toneH if carry
LD HL, $IDEN$NULL
LDZ Y, $NOTE2H        # 69
FNH DZ, HL            # HL = 0x0B
LD Y, $TONE2H
#140/140
ADDHL DZ, ND          # A = sample index
LD HL, $IDEN$NULL
LDZ Y, $WAVE2
FNH DZ, HL            # HL = adsr/wave
#150/147
LD Y, $AUDIO
WAVHL A, HLA          # HL = synth value
ADDHL DZ, ND          # HL +> audio
#160/153
$NEXT
LD HL, $IDEN$NULL
LDZ Y, $INST
FNH DZ, HL            # inst cache -> HL
LD Y, $VMS            # set Y = $VMS on exit
VMPHL DZ, PGA         # jump to next VMC
#172/163

ADDR 0xA8             # 3-voice
LD HL, $IDEN$NULL
LDZ Y, $NOTE2L        # 69
FNH DZ, HL            # HL = 0xA6
#110/172
LD Y, $TONE2L
ADDHL DZ, ND
AFHL AZ, NA
#120/178
LDP HL, $IDEN$NULL
LDN HL, $INC$NULL
LDZ Y, $TONE2H
FNH DZ, HLD           # inc toneH if carry
LD HL, $IDEN$NULL
LDZ Y, $NOTE2H        # 69
#131/189
FNH DZ, HL            # HL = 0x0B
LD Y, $TONE2H
ADDHL DZ, ND          # A = sample index
LD HL, $IDEN$NULL
#141/196
LDZ Y, $WAVE2
FNH DZ, HL            # HL = adsr/wave
LD Y, $AUDIO
WAVHL A, HLA          # HL = synth value
#151/203
ADDHL DZ, ND          # HL +> audio
LD HL, $IDEN$NULL
LDZ Y, $NOTE3L        # 69
FNH DZ, HL            # HL = 0xA6
#161/210
LD Y, $TONE3L
ADDHL DZ, ND
AFHL AZ, NA
#171/216
LDP HL, $IDEN$NULL
LDN HL, $INC$NULL
LDZ Y, $TONE3H
FNH DZ, HLD           # inc toneH if carry
LD HL, $IDEN$NULL
#180/225
LDZ Y, $NOTE3H        # 69
FNH DZ, HL            # HL = 0x0B
LD Y, $TONE3H
ADDHL DZ, ND          # A = sample index
#190/232
LD HL, $IDEN$NULL
LDZ Y, $WAVE3
FNH DZ, HL            # HL = adsr/wave
LD Y, $AUDIO
WAVHL A, HLA          # HL = synth value
#202/241
ADDHL DZ, ND          # HL +> audio
NOP
NOP
NOP
NOP
#210/247
NOP
LD Y, $VMS
LD PG, $PSYNCE_PG
#215/252
