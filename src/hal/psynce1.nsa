# H-sync at end of process cycle on standard execute
INCLUDE ../inc/unary.nsa
INCLUDE ../inc/zpage.nsa
INCLUDE ../inc/pages.nsa
PAGE PSYNCE1_PG

# PMODE: column in AV used during process cycle
# VLINE: line(page) in video ram
# VMS: [mode_line][e][cyc]
#       0,4,8,12   0  0-3
#       0,5,10     1  4-6
# assumes Y=$VMS
LDZ HL, $INCPROC$NULL
FNH DZ, HLD          # H=mode_line start, L=EX00+1
LD Y, $PMODE
AVTH DZ, SA          # mode_line, pmode —> S
#9
LDP HL, $IDEN$IDEN   # sign bit low, don’t inc vline
LDN HL, $INC$IDEN    # sign bit high, inc vline
LD Y, $VLINE
FNFH DZ, VD          # increment? vline —> V
FNFL E, HL           # serial inputs -> H
#20
LD Y, $SERS
COMH DZ, ND          # update serial state
LD HL, $INC$NULL
LDZ Y, $PLINE
#29
FNH DZ, HLD          # pline = pline+1
LD HL, $IDEN$NULL
LDZ Y, $VMODE
FNH DZ, HL           # H = vmode
LD Y, $PMODE
#39
AVTH AZ, ND          # determine mode for next process cycle
LDP PC, $NEXT_FIELD  # jump at end of field
NOP
NOP
NOP
NOP
NOP
NOP
NOP
#50/44
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
#60/54
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
#70/64
NOP
NOP
NOP
NOP
LD HL, $IDEN$VMP1
LDZ Y, $INST
FNFH DZ, NA           # A = inst cache
#81
LD Y, $VMS            # set Y = $VMS on exit
FNEL A, PG            # jump to next VMC
#86

$NEXT_FIELD
LD HL, $IDEN$NULL
LD Y, $PLINE
MULH DZ, ND          # 0 -> process line
#51
LDZ Y, $VMODE
FNH DZ, HL           # H = video mode
LD Y, $PMODE
AVTH AZ, ND          # set mode for next process cycle
#60
LD HL, $IDEN$NULL
LD Y, $VSTART
FNFH DZ, NA          # A = start of display
LDZ Y, $VLINE
FNH AZ, HLD          # reset vline to start
#71
NOP
NOP
NOP
LD HL, $IDEN$VMP1
LD Y, $INST
FNFH DZ, NA           # A = inst cache
#81
LD Y, $VMS            # set Y = $VMS on exit
FNEL A, PG            # jump to next VMC
#86
