# H-sync at end of process cycle on standard execute
INCLUDE ../inc/unary.nsa
INCLUDE ../inc/zpage.nsa
INCLUDE ../inc/pages.nsa
PAGE PSYNCE_PG

# PMODE: column in VID used during process cycle
# VLINE: line(page) in video ram
# VMS: [mode_line][e][cycle count]
#           0,1,2  0  0,1,2,3,4,5
#         3,4,5,6  1  0,1,2,3,4
#        7,8,9,10     0,1,2,3,4
#  11,12,13,14,15     0,1,2,3
# assumes Y=$VMS
LDZ HL, $INCPROC$NULL
FNH DZ, HLD               # H=mode_line start, L=E001
LD Y, $PMODE
VIDH DZ, SA               # mode_line, pmode —> S
#9/7
LDP HL, $IDEN$IDEN        # sign bit low, don’t inc vline
LDN HL, $INC$IDEN         # sign bit high, inc vline
LD Y, $VLINE
FNFH DZ, VD               # increment? vline —> V
FNFL E, HL                # H = serial inputs
#20/17
LD Y, $COMLS
COMH DZ, ND               # update comms line state
LD HL, $IDEN$8
LD Y, $COMPS
#29/25
FNFH AZ, ND               # comms line state -> comms process state
DIVL E, HL                # H = ps2 clk
LD Y, $COMLS
MVHZ ND                   # H -> ps2 state
#40/33
LD HL, $SWAP$NULL
LDZ Y, $IMASK
FNH DZ, HLA               # A = IMASK<<4
LDP HL, $0xFF             # IMODE: -1
LDN HL, $0                # IMODE: 0
#49/42
LD Y, $IMODE
MVHLZ ND                  # HL -> IMODE
LD HL, $INC$NULL
LDZ Y, $PLINE
#59/50
FNH DZ, HLD               # A,pline = pline+1
LD HL, $IDEN$NULL
LDZ Y, $VMODE
FNH DZ, HL                # H = vmode
LD Y, $PMODE
#69/58
VIDH AZ, ND               # VID(vmode,pline) -> pmode
LD HL, $IDEN$NULL
LDP PC, $NEXT_FIELD       # jump if pmode zero?
NOP
LDZ Y, $INST
FNH DZ, HL                # inst cache -> HL
#80/68
LD Y, $VMS                # set Y = $VMS on exit
VMPHL DZ, PGA             # jump to next VMC
#86/72

$NEXT_FIELD
LD Y, $PLINE
MULH DZ, ND               # 0 -> pline
#81/76
LDZ Y, $VMODE
FNH DZ, HL                # H = vmode
LD Y, $PMODE
VIDH AZ, ND               # VID(vmode,pline) -> pmode
#90/83
LD HL, $IDEN$NULL
LD Y, $VSTART
FNFH DZ, NA               # A = vertical start
LDZ Y, $VLINE
FNH AZ, HLD               # vstart -> vline
#101/92
LD HL, $DEC$MODEPG
LD Y, $FRAME
FNFH DZ, ND               # frame count -1
LDN PC, $RTC              # update RTC
NOP
#110/102
LD HL, $INC$NULL
LDZ Y, $VMS
FNH DZ, HLD               # VMS +1
LD HL, $IDEN$NULL
#119/109
LDZ Y, $INST
FNH DZ, HL                # inst cache -> HL
LD Y, $VMS                # set Y = $VMS on exit
VMPHL DZ, PGA             # jump to next VMC
#129/116

$RTC
#110/116
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
NOP
#120
NOP
NOP
NOP
NOP
LD Y, $VMS
FNEL DZ, PG               # fork to RTC page
#129
#(~150 pc/64 inst for RTC)
# 3-line/60Hz: FRAME=3, 3VMC,CSYNC
# 4-line/75Hz: FRAME=4, 2VMC,NSYNC,1VMC
# 4-line/60Hz: FRAME=3, 2VMC,NSYNC,1VMC
# 5-line/60Hz: FRAME=3, 1VMC,NSYNC,2VMC
