# *** ROM COPY ***
INCLUDE ../inc/unary.nsa
INCLUDE ../inc/zpage.nsa
INCLUDE ../inc/pages.nsa
PAGE ROM_COPY

LD HL, $0x80            # pre-calc PC (0..15)->(00,08..78)->(80,88..F8)
LD Y, $ROM_ID
MULH DZ, NA             # mul 8
ADDHL AZ, ND            # add 128

$INIT
LD HL, $0
LD Y, $ROM_PG
MULH DZ, ND             # init 0
LD Y, $ROM_X
MULH DZ, ND             # init 0

$START
LD HL, $IDEN$2
LD Y, $ROM_X
FNFH DZ, XA             # [52]->X, A
LDZ Y, $ROM_ID
FNH DZ, PC              # jump to READ_ROM, A=index, L=2

$CONT
MVHL NA                 # HL->A return value from ROM
LD HL, $0
LDZ Y,  $ROM_Y
ADDL DZ, Y              # [53]->Y
ADDH A, ND              # A->[X, Y] ** this would normally be NB
LD HL, $0x10
LDZ Y, $ROM_X
ADDH DZ, ND             # X++
LDZ HL, $ZERO?$NULL

FNH A, HLA              # A = X==0 ? 0 : -1
LDP HL, $0x18
LDN HL, $0
LDZ Y, $ROM_Y
ADDH DZ, ND             # Y++ if X=0
LDZ Y, $ROM_PG
ADDL DZ, HL             # rom H += 8 if X=0
MVHLZ ND
LDP PC, $START          # jump to start if Y<16

LD HL, $0x80
LDZ Y,  $ROM_ID
ADDH DZ, ND
LD HL, $DEC$NULL
LDZ Y,  $ROM_N
FNH DZ, HLD
LDP PC, $INIT
LD PG, $SET_VMODE

ADDR 0x80
$READ_ROM               # n = 0:40,1:48,2:50..F:B8
LDZ Y,  $ROM_PG
MULL DZ, HL             # [51]*2->H (can be FNF shift left)
ROM0H A, HL             # ROMn(A, H)->HL
LD PC, $CONT

LDZ Y,  $ROM_PG
MULL DZ, HL             # [51]*2->H (can be FNF shift left)
ROM1H A, HL             # ROMn(A, H)->HL
LD PC, $CONT

LDZ Y,  $ROM_PG
MULL DZ, HL             # [51]*2->H (can be FNF shift left)
ROM2H A, HL             # ROMn(A, H)->HL
LD PC, $CONT

LDZ Y,  $ROM_PG
MULL DZ, HL             # [51]*2->H (can be FNF shift left)
ROM3H A, HL             # ROMn(A, H)->HL
LD PC, $CONT

LDZ Y,  $ROM_PG
MULL DZ, HL             # [51]*2->H (can be FNF shift left)
ROM4H A, HL             # ROMn(A, H)->HL
LD PC, $CONT

LDZ Y,  $ROM_PG
MULL DZ, HL             # [51]*2->H (can be FNF shift left)
ROM5H A, HL             # ROMn(A, H)->HL
LD PC, $CONT

LDZ Y,  $ROM_PG
MULL DZ, HL             # [51]*2->H (can be FNF shift left)
ROM6H A, HL             # ROMn(A, H)->HL
LD PC, $CONT

LDZ Y,  $ROM_PG
MULL DZ, HL             # [51]*2->H (can be FNF shift left)
ROM7H A, HL             # ROMn(A, H)->HL
LD PC, $CONT

LDZ Y,  $ROM_PG
MULL DZ, HL             # [51]*2->H (can be FNF shift left)
ROM8H A, HL             # ROMn(A, H)->HL
LD PC, $CONT

LDZ Y,  $ROM_PG
MULL DZ, HL             # [51]*2->H (can be FNF shift left)
ROM9H A, HL             # ROMn(A, H)->HL
LD PC, $CONT

LDZ Y,  $ROM_PG
MULL DZ, HL             # [51]*2->H (can be FNF shift left)
ROMAH A, HL             # ROMn(A, H)->HL
LD PC, $CONT

LDZ Y,  $ROM_PG
MULL DZ, HL             # [51]*2->H (can be FNF shift left)
ROMBH A, HL             # ROMn(A, H)->HL
LD PC, $CONT

LDZ Y,  $ROM_PG
MULL DZ, HL             # [51]*2->H (can be FNF shift left)
ROMCH A, HL             # ROMn(A, H)->HL
LD PC, $CONT

LDZ Y,  $ROM_PG
MULL DZ, HL             # [51]*2->H (can be FNF shift left)
ROMDH A, HL             # ROMn(A, H)->HL
LD PC, $CONT

LDZ Y,  $ROM_PG
MULL DZ, HL             # [51]*2->H (can be FNF shift left)
ROMEH A, HL             # ROMn(A, H)->HL
LD PC, $CONT

LDZ Y,  $ROM_PG
MULL DZ, HL             # [51]*2->H (can be FNF shift left)
ROMFH A, HL             # ROMn(A, H)->HL
LD PC, $CONT

